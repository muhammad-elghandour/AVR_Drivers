/*
 * ADC_int.h
 *
 *  Created on	: Nov 03, 2020
 *  Version		: 1.0.0
 *  Author		: Muhammad Elghandour
 */

#ifndef MCAL_ADC_INT_H_
#define MCAL_ADC_INT_H_



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuInit.                                          **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Setting prescaler , adjustment and reference voltage. **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuInit 				(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuEnable.                                        **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Enabling the ADC peripheral.                          **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuEnable				(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuDisable.                                       **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Disabling the ADC peripheral.                         **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuDisable 			(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuEnableTrigger.                                 **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Enabling the ADC Trigger.                             **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuEnableTrigger 		(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuDisableTrigger.                                **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Disabling the ADC Trigger.                            **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuDisableTrigger 		(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuEnableInterrupt.                               **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Enabling the ADC Interrupt.                           **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuEnableInterrupt 	(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuDisableInterrupt.                              **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Disabling the ADC Interrupt.                          **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuDisableInterrupt 	(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuStartConversion.                               **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Starting of ADC Conversion.                           **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuStartConversion	 	(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuPollingOnFlag.                                 **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : void.                                                 **/
/**	Functionality   : Polling on rising ADC flag, then clear it.            **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuPollingOnFlag	 	(void);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuSelectChannel.                                 **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : Number of ADC Channel.                                **/
/**	Functionality   : Selecting of ADC Channel.                             **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuSelectChannel 		(u8 Copy_u8Channel);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuReadHighRegister.                              **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : Address of Variable which will Carry ADC Value.       **/
/**	Functionality   : Reading the highest 8 bit of ADC resolution register. **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuReadHighRegister	(volatile u8 * Copy_Pu8ADC_Value);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuReadADC.                                       **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : Address of Variable which will Carry ADC Value.       **/
/**	Functionality   : Reading All ADC resolution register.                  **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuReadADC				(volatile u16 * Copy_Pu16ADC_Value);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/



/*****************************************************************************/
/*****************************************************************************/
/**	Function Name   : ADC_enuCallBackFunction.                              **/
/**	Return Type     : ERROR_STATES enum.                                    **/
/**	Arguments       : ptr to a void func having generic ptr & this generic. **/
/**	Functionality   : Starting of ADC Conversion.                           **/
/*****************************************************************************/
/*****************************************************************************/
ERROR_STATES ADC_enuCallBackFunction 	( void (*Copy_PF_CallBack)(void*)  , void* Copy_PvoidParameter);
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/


#endif /* MCAL_ADC_INT_H_ */
